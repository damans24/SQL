/*Assignment G*/ 
-- TRIGGER INSERT
Create TRIGGER utrInsteadInsertTblOMClub
ON tblOMClub INSTEAD OF INSERT
AS
??????BEGIN
????????????DECLARE @clubID int;
????????????SELECT @clubID= ClubID FROM inserted
????????????SELECT @clubID = COUNT(*) FROM tblOMPerson WHERE ClubID=@clubID;
??????IF @clubID >=1
??????BEGIN
????????????INSERT INTO tblOMClub
????????????SELECT * FROM inserted;
????????????SELECT @clubID= ClubID FROM tblOMClub WHERE ClubID=@clubID
??????END
??????ELSE
??????BEGIN
????????????PRINT 'The Club with club ID=' + CAST (@clubID as varchar(10)) +
????????????'can''t be inserted. No person has been assigned into the club'
??????END
??????END

INSERT INTO tblOMClub (ClubID, ClubName, Description) values (8, 'ESL',
'English as second language')

INSERT INTO tblOMClub (ClubID, ClubName, Description) values (3, 'Skii',
'Downhill skii club')


??????CREATE TRIGGER utrInsteadUpdateTblOMClub
??????ON tblOMClub INSTEAD OF UPDATE
??????AS
??????BEGIN
????????????DECLARE @oldClubID int, @newClubID int, @ClubName varchar(50), @count int;
????????????SELECT @oldClubID = ClubID FROM deleted
??????IF @oldClubID IS NULL
????????????PRINT 'The old club ID does not exist';
????????????RETURN
????????????SELECT @newClubID = ClubID FROM inserted
????????????BEGIN TRANSACTION
????????????BEGIN TRY
??????????????????DECLARE @clubID int;
??????????????????SELECT @clubID= ClubID FROM inserted;
????????????INSERT INTO tblOMClub(ClubID, ClubName, Description)
????????????VALUES (@clubID,@ClubName,'Association for artificial
????????????intelligence')
??????END TRY
??????BEGIN CATCH
????????????UPDATE tblOMPerson SET ClubID=@newClubID
????????????WHERE ClubID=@oldClubID;
????????????SET @count=@@ROWCOUNT
??????IF @count >=1
????????????UPDATE tblOMClub SET ClubID=@newClubID
??????WHERE ClubID=@oldClubID
????????????COMMIT TRANSACTION;
??????IF @count <1
??????BEGIN
????????????PRINT 'the club ID=' + CAST(@oldClubID as varchar(10)) + '
????????????cant be updated'
??????ROLLBACK TRANSACTION;???
??????RETURN;
??????END
??????ROLLBACK TRANSACTION;
??????PRINT 'The Club ID ' + CAST (@oldClubID as varchar(10)) + ' can''t be
????????????updated. Unexpected error happened in the updates'
????????????END CATCH;
??????END

UPDATE tblOMClub SET ClubID=3 WHERE ClubID=4
UPDATE tblOMClub SET ClubID=6 WHERE ClubID=1


--Stored Procedures
	  CREATE PROCEDURE uspCustomerPurchaseTransaction
??????@saleID int, @customerID int, @employeeID int , @itemID int, @itemprice money,
??????@status int OUTPUT, @message varchar(250) OUTPUT
??????AS
??????BEGIN

????????????BEGIN TRANSACTION
????????????PRINT 'INPUT VALUES'
????????????PRINT '------------------------------------'
????????????PRINT 'SALE ID: ' + CAST(@saleID as varchar(10));
????????????PRINT 'Employee ID: ' + CAST(@employeeID as varchar(10));
????????????PRINT 'Customer ID: ' + CAST(@customerID as varchar(10));
????????????PRINT 'Item ID: ' + CAST(@itemID as varchar(10));
????????????PRINT 'Item Price: ' + CAst(@itemPrice as varchar(50));
????????????PRINT '------------------------------------'


????????????SELECT * FROM tblItem WHERE ItemID=@itemID AND ItemPrice=@itemprice;

????????????DECLARE @count int;
??????????????????SET @count=@@ROWCOUNT
????????????IF @count >=0
????????????BEGIN
??????????????????SET @status= -1;
??????????????????SET @message= 'No such Price' + CAST (@itemprice as
????????????????????????varchar(10)) + 'in this Item' + CAST(@itemID as varchar(10));
????????????????????????ROLLBACK TRANSACTION;
??????????????????RETURN;
????????????END

????????????SELECT @count = COUNT(*) from tblSale WHERE SaleID = @saleID;
????????????IF @count < 0
????????????BEGIN
??????????????????BEGIN TRY
??????????????????SET IDENTITY_INSERT dbo.tblSale off
??????????????????INSERT INTO tblSale (SaleID,SaleDate,Subtotal,Tax,Total,CustomerID,EmployeeID)
????????????????????????VALUES (@saleID,'2012-12-14
????????????????????????00:00:00.000','3500','290.5','3790.5', @customerID, @employeeID)
??????????????????SET IDENTITY_INSERT dbo.tblSale on
??????????????????END TRY
??????
??????
??????????????????BEGIN CATCH
????????????????????????
????????????????????????SET @status=-2;
????????????????????????SET @message ='Message window'
????????????????????????print 'INSERT INTO tblSale failed'??
????????????????????????ROLLBACK TRANSACTION;
????????????????????????RETURN;
??????????????????END CATCH
????????????END

????????????DECLARE @saleItemID int
????????????SELECT @saleItemID=max(SaleItemID) FROM tblSaleItem WHERE SaleID=@saleID
????????????IF @saleItemID is null
??????????????????SET @saleItemID = 1;
????????????ELSE
??????????????????SET @saleItemID = @saleItemID + 1;
????????????BEGIN TRY
??????????????????INSERT INTO tblSalesItem (SaleItemID,SaleID,ItemID, ItemPrice)
????????????????????????VALUES (@saleItemID, @saleID,@itemID,@itemprice)
????????????END TRY
????????????BEGIN CATCH
????????????????????????SET @status=-3;
????????????????????????SET @message ='Message window';
??????????????????ROLLBACK TRANSACTION;
??????????????????RETURN;
????????????END CATCH
??????END

--ItemID and ItemPrice do not match the values in the tblItem table
DECLARE @status int, @message varchar(250)
EXECUTE uspCustomerPurchaseTransaction 14,10,5,22,750.00, @status OUTPUT,
@message OUTPUT
SELECT @status
SELECT @message
-- SaleID exists in the tblSale table and all statements are successfully

DECLARE @status int, @message varchar(250)
EXECUTE uspCustomerPurchaseTransaction 8, 2, 2, 10, 1750.00, @status OUTPUT,
@message OUTPUT
SELECT @status
SELECT @message
--SaleID does not exist in the tblSale table and all statements are
DECLARE @status int, @message varchar(250)
EXECUTE uspCustomerPurchaseTransaction 15, 2, 5, 17, 250.00, @status OUTPUT,
@message OUTPUT
SELECT @status
SELECT @message

